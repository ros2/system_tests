# generated from test_communication/test/test_publisher_subscriber.py.in

import os
import sys
import time

from launch import LaunchDescriptor
from launch.exit_handler import primary_exit_handler
from launch.launcher import DefaultLauncher


def test_publisher_subscriber():
    namespace = '/test_time_%s' % time.strftime('%H_%M_%S', time.gmtime())
    ld = LaunchDescriptor()
    publisher_cmd = ['@TEST_PUBLISHER_EXECUTABLE@', '@TEST_MESSAGE_TYPE@', namespace]
    subscriber_cmd = ['@TEST_SUBSCRIBER_EXECUTABLE@', '@TEST_MESSAGE_TYPE@', namespace]

    publisher_env = dict(os.environ)
    subscriber_env = dict(os.environ)

    if '@TEST_PUBLISHER_RCL@' == 'rclpy':
        publisher_cmd.insert(0, sys.executable)
        publisher_env['PYTHONUNBUFFERED'] = '1'
    if '@TEST_SUBSCRIBER_RCL@' == 'rclpy':
        subscriber_cmd.insert(0, sys.executable)
        subscriber_env['PYTHONUNBUFFERED'] = '1'

    publisher_env['RCL_ASSERT_RMW_ID_MATCHES'] = '@PUBLISHER_RMW@'
    publisher_env['RMW_IMPLEMENTATION'] = '@PUBLISHER_RMW@'
    ld.add_process(
        cmd=publisher_cmd,
        name='test_publisher',
        env=publisher_env,
    )

    subscriber_env['RCL_ASSERT_RMW_ID_MATCHES'] = '@SUBSCRIBER_RMW@'
    subscriber_env['RMW_IMPLEMENTATION'] = '@SUBSCRIBER_RMW@'
    ld.add_process(
        cmd=subscriber_cmd,
        name='test_subscriber',
        env=subscriber_env,
        exit_handler=primary_exit_handler,
    )

    launcher = DefaultLauncher()
    launcher.add_launch_descriptor(ld)
    rc = launcher.launch()

    assert rc == 0, \
        "The launch file failed with exit code '" + str(rc) + "'. " \
        'May be the subscriber did not receive any messages?'


if __name__ == '__main__':
    test_publisher_subscriber()
