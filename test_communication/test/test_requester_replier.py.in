# generated from test_communication/test/test_requester_replier.py.in

import os
import sys
import time

from launch.legacy import LaunchDescriptor
from launch.legacy.exit_handler import primary_exit_handler
from launch.legacy.launcher import DefaultLauncher


def test_requester_replier():
    namespace = '/test_time_%s' % time.strftime('%H_%M_%S', time.gmtime())

    ld = LaunchDescriptor()
    requester_cmd = ['@TEST_REQUESTER_EXECUTABLE@', '@TEST_SERVICE_TYPE@', namespace]
    replier_cmd = ['@TEST_REPLIER_EXECUTABLE@', '@TEST_SERVICE_TYPE@', namespace]

    replier_env = dict(os.environ)
    requester_env = dict(os.environ)

    if '@TEST_REQUESTER_RCL@' == 'rclpy':
        requester_cmd.insert(0, sys.executable)
        replier_env['PYTHONUNBUFFERED'] = '1'
    if '@TEST_REPLIER_RCL@' == 'rclpy':
        replier_cmd.insert(0, sys.executable)
        requester_env['PYTHONUNBUFFERED'] = '1'

    replier_env['RCL_ASSERT_RMW_ID_MATCHES'] = '@REPLIER_RMW@'
    replier_env['RMW_IMPLEMENTATION'] = '@REPLIER_RMW@'
    ld.add_process(
        cmd=replier_cmd,
        name='test_replier',
        env=replier_env,
    )

    requester_env['RCL_ASSERT_RMW_ID_MATCHES'] = '@REQUESTER_RMW@'
    requester_env['RMW_IMPLEMENTATION'] = '@REQUESTER_RMW@'
    ld.add_process(
        cmd=requester_cmd,
        name='test_requester',
        env=requester_env,
        exit_handler=primary_exit_handler,
    )

    launcher = DefaultLauncher()
    launcher.add_launch_descriptor(ld)
    rc = launcher.launch()

    assert rc == 0, \
        "The launch file failed with exit code '" + str(rc) + "'. " \
        'May be the requester did not receive any replies?'


if __name__ == '__main__':
    test_requester_replier()
