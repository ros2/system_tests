# generated from test_communication/test/test_action_client_server.py.in

import os
import sys
import time

from launch import LaunchDescription
from launch import LaunchService
from launch.actions import ExecuteProcess
from launch_testing import LaunchTestService

import pytest

ACTION_TYPES = '@TEST_ACTION_TYPES@'.split(';')


@pytest.mark.parametrize('action_type', ACTION_TYPES)
def test_action_client_server(action_type):
    namespace = '/test_time_%s' % time.strftime('%H_%M_%S', time.gmtime())

    launch_test = LaunchTestService()
    launch_description = LaunchDescription()

    action_client_cmd = ['@TEST_ACTION_CLIENT_EXECUTABLE@', action_type, namespace]
    action_server_cmd = ['@TEST_ACTION_SERVER_EXECUTABLE@', action_type, namespace]

    action_server_env = dict(os.environ)
    action_client_env = dict(os.environ)

    if '@TEST_ACTION_SERVER_RCL@' == 'rclpy':
        action_server_cmd.insert(0, sys.executable)
        action_server_env['PYTHONUNBUFFERED'] = '1'
    if '@TEST_ACTION_CLIENT_RCL@' == 'rclpy':
        action_client_cmd.insert(0, sys.executable)
        action_client_env['PYTHONUNBUFFERED'] = '1'

    action_server_env['RCL_ASSERT_RMW_ID_MATCHES'] = '@ACTION_SERVER_RMW@'
    action_server_env['RMW_IMPLEMENTATION'] = '@ACTION_SERVER_RMW@'

    launch_test.add_fixture_action(
        launch_description, ExecuteProcess(
            cmd=action_server_cmd,
            name='test_publisher',
            env=action_server_env,
        )
    )

    action_client_env['RCL_ASSERT_RMW_ID_MATCHES'] = '@ACTION_CLIENT_RMW@'
    action_client_env['RMW_IMPLEMENTATION'] = '@ACTION_CLIENT_RMW@'

    launch_test.add_test_action(
        launch_description, ExecuteProcess(
            cmd=action_client_cmd,
            name='test_action_client',
            env=action_client_env,
        )
    )

    launch_service = LaunchService()
    launch_service.include_launch_description(launch_description)
    rc = launch_test.run(launch_service)

    assert rc == 0, \
        "The launch file failed with exit code '" + str(rc) + "'. " \
        'May be the action client did not receive any completed goals from the action server?'


if __name__ == '__main__':
    for action_type in ACTION_TYPES:
        test_action_client_server(action_type)
