# generated from test_rclcpp/test/test_executable_output.py.in
# generated code does not contain a copyright notice

from launch.legacy import LaunchDescriptor
from launch.legacy.exit_handler import primary_exit_handler
from launch.legacy.launcher import DefaultLauncher
from launch.legacy.output_handler import ConsoleOutput

from launch_testing import create_handler


def @TEST_NAME@():
    ld = LaunchDescriptor()

    output_handlers = [ConsoleOutput()]

    shutdown_trigger_handler = create_handler(
        '@TEST_EXECUTABLE_NAME@',
        ld,
        '@TEST_EXECUTABLE_TRIGGER_SHUTDOWN_OUTPUT@',
        exit_on_match=True,
        filtered_rmw_implementation='@rmw_implementation@',
    )
    output_handlers.append(shutdown_trigger_handler)

    output_check_handler = create_handler(
        '@TEST_EXECUTABLE_NAME@',
        ld,
        '@TEST_EXECUTABLE_EXPECTED_OUTPUT@',
        exit_on_match=False,
        filtered_rmw_implementation='@rmw_implementation@',
    )
    output_handlers.append(output_check_handler)

    ld.add_process(
        cmd=['@TEST_EXECUTABLE@'],
        name='@TEST_EXECUTABLE_NAME@',
        exit_handler=primary_exit_handler,
        output_handlers=output_handlers,
    )

    launcher = DefaultLauncher()
    launcher.add_launch_descriptor(ld)
    rc = launcher.launch()

    assert rc == 0, "The launch file failed with exit code '" + str(rc) + "'. "

    output_check_handler.check()


if __name__ == '__main__':
    @TEST_NAME@()
